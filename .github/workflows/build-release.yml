name: Build and Upload Libraries
on:
  push:
    branches:
      - run-actions
permissions:
  contents: write
jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create/upload to releases
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up build environment
        run: sudo apt update && sudo apt install -y build-essential cmake ninja-build 

      - name: Configure CMake
        run: cmake -B build -D CMAKE_BUILD_TYPE=Debug -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -G Ninja

      - name: Build
        run: cmake --build build --config Release

      - name: Archive built libraries
        run: |
          mkdir -p output
          cp build/lib*.so output/ || true
          cp build/lib*.a output/ || true
          cp build/*.dll output/ || true
          cp build/*.dylib output/ || true
          tar -czvf libs-${{ runner.os }}.tar.gz -C output .

      - name: Upload asset (Linux)
        if: runner.os == 'Linux'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release_job.outputs.upload_url }}
          asset_path: libs-${{ runner.os }}.tar.gz
          asset_name: libs-${{ runner.os }}.tar.gz